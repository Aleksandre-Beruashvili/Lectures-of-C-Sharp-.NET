// ტექნიკური სავარჯიშოები
// სავარჯიშო 1: For ციკლი
// 1. დაწერე პროგრამა, რომელიც დაბეჭდავს 1-დან 100-მდე ციფრებს For ციკლის
// გამოყენებით.

// internal class Program
// {
//     public static void Main()
//     {
//         for (int i = 0; i <= 100; i++)
//         Console.WriteLine(i);
//     }
// }
// 2. დაწერე პროგრამა, რომელიც For ციკლის გამოყენებით დაბეჭდავს ყველა ლუწ
// რიცხვს 1-დან 50-მდე.

// internal class Program
// {
//     public static void Main()
//     {
//         for (int i = 0; i <= 50; i++)
//         {
//             if (i % 2 == 0)
//             {
//                 Console.WriteLine(i);
//             }
//         }
//     }
// }


// სავარჯიშო 2: While ციკლი

// 1. დაწერე პროგრამა, რომელიც While ციკლის გამოყენებით დაითვლის და დაბეჭდავს
// ყველა რიცხვის ჯამს 1-დან 50-მდე.


// 2. დაწერე პროგრამა, რომელიც While ციკლის გამოყენებით 5-ჯერ მოსთხოვს
// მომხმარებელს შეიყვანოს რიცხვი და დაბეჭდავს ამ რიცხვების ჯამს.
// სავარჯიშო 3: Do-While ციკლი
// 1. დაწერე პროგრამა, რომელიც მომხმარებელს სთხოვს შეიყვანოს 10-ზე ნაკლები
// რიცხვი და სანამ რიცხვი არ იქნება 10-ზე ნაკლები, ისევ მოითხოვს მონაცემის შეყვანას
// (Do-While ციკლის გამოყენებით).
// 2. დაწერე პროგრამა, რომელიც 3-ჯერ დაუსვამს მომხმარებელს კითხვას "Do you want to
// continue?" და თუ პასუხი იქნება "yes", პროგრამა გააგრძელებს ციკლს.
// სავარჯიშო 4: ჩადგმული (Nested) ციკლები
// დაწერე პროგრამა, რომელიც დაბეჭდავს ვარსკვლავების (*) სამკუთხედს შემდეგი ფორმით:
// 􀋒
// 􀋒􀋒
// 􀋒􀋒􀋒
// 􀋒􀋒􀋒􀋒
// Loops ამოცანები
// 􀋒􀋒􀋒􀋒􀋒
// სავარჯიშო 5: ციკლი და პირობა (if)
// დაწერე პროგრამა, რომელიც For ციკლის გამოყენებით დაბეჭდავს რიცხვებს 1-დან 100-მდე,
// მაგრამ:
// ● თუ რიცხვი იყოფა 3-ზე, დაბეჭდოს "Fizz"
// ● თუ რიცხვი იყოფა 5-ზე, დაბეჭდოს "Buzz"
// ● თუ რიცხვი იყოფა 3-სა და 5-ზე ერთდროულად, დაბეჭდოს "FizzBuzz"
// პრაქტიკული ამოცანები
// სავარჯიშო 1: მომხმარებლის კალათის ჯამი
// დაწერე პროგრამა, რომელიც მომხმარებელს სთხოვს შეიყვანოს პროდუქტების ფასი. ყველა
// შეყვანის შემდეგ პროგრამამ მომხმარებელს უნდა ჰკითხოს სურს თუ არა გაგრძელება. თუ
// მომხმარებელი შეიყვანს “yes” ან “y” პროგრამა უნდა გაგრძელდეს და მოითხოვოს მომდევნო
// ფასის შემოყვანა. ბოლოს პროგრამამ უნდა დაბეჭდოს შეყვანილი პროდუქტების საერთო
// ღირებულება.
// სავარჯიშო 2: საშუალო ქულის გამოთვლა
// დაწერე პროგრამა, რომელიც მოსწავლის ქულების შეყვანისას გამოთვლის საშუალო ქულას.
// პროგრამამ უნდა სთხოვოს მომხმარებელს შეიყვანოს მოსწავლის ქულები. ქულის შეყვანის
// შემდეგ პროგრამამ უნდა ჰკითხოს სურს თუ არა გაგრძელება. თუ მომხმარებელი შეიყვანს
// “yes” ან “y” პროგრამა უნდა გაგრძელდეს და მოითხოვოს მომდევნო ქულის შეყვანა. ბოლოს
// პროგრამამ უნდა დაბეჭდოს საშუალო ქულა (შეყვანილი ქულების საშუალო არითმეტიკული).
// სავარჯიშო 3: საბანკო ანგარიშის ტრანზაქციები
// დაწერე პროგრამა, რომელიც საბანკო ანგარიშის ტრანზაქციებს ამუშავებს. პროგრამა
// მომხმარებელს სთხოვს შეიყვანოს ტრანზაქციის ტიპი (შემოსავალი ან ხარჯი) და თანხა.
// ინფორმაციის შეყვანის შემდეგ პროგრამამ უნდა ჰკითხოს სურს თუ არა გაგრძელება. თუ
// მომხმარებელი შეიყვანს “yes” ან “y” პროგრამა უნდა გაგრძელდეს და მოითხოვოს მომდევნო
// ტრანზაქციის ტიპის და თანხის შეყვანა. საბოლოოდ პროგრამამ უნდა დაბეჭდოს ხარჯების
// ჯამი, შემოსავლების ჯამი და ანგარიშის ბალანსი.